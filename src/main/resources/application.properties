spring.application.name=t4m-notification-service

# Spring Boot Config
#spring.profiles.active=local
build.version=@project.version@
server.port=${APP_PORT:8093}
application.url=${APP_URL:http://localhost:8093}
spring.devtools.add-properties=false

## Logging
logging.level.org.springframework.security=INFO
logging.pattern.console=%green([%d{dd-MM-yyyy HH:mm:ss}]) %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

## Keycloak Config
spring.security.oauth2.resourceserver.jwt.issuer-uri = ${KEYCLOAK_REALM_URL:http://localhost:9080/realms/tec4maases}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
spring.security.cors.domains=${CORS_DOMAINS:http://localhost:3000}
user.manager.component.url=${USER_MANAGER_URL:http://localhost:8094}
keycloak.client=${KEYCLOAK_CLIENT:tec4maases}
keycloak.client.secret=${KEYCLOAK_CLIENT_SECRET:###}
keycloak.token-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/token

## Database Config
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5433/tec4maases}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=60000
spring.datasource.hikari.pool-name=HikariPool-t4m-notification-service
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.datasource.hikari.auto-commit=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

## Kafka Config
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.topics=${KAFKA_TOPICS:service-decomposition-finished,supply-chain-negotiation,supply-chain-order-status,stakeholders-matched,dataspace-organization-onboarding,service-composition-finished,post-optimization-finished}
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.retries=3
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.session-timeout-ms=30000
spring.kafka.consumer.heartbeat-interval-ms=10000
spring.kafka.listener.observation-enabled=true
#spring.kafka.consumer.properties.schema.registry.url=${SCHEMA_REGISTRY_URL:http://localhost:8081}
#spring.kafka.consumer.properties.json.value.type=gr.atc.t4m.dto.EventDto

## Actuator Config
springdoc.swagger-ui.path=/api/notification-service/swagger
springdoc.api-docs.path=/api/notification-service/v3/api-docs

## Swagger Config
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.exposure.exclude=env,shutdown
management.endpoints.web.base-path=/actuator
management.endpoints.web.discovery.enabled=true
management.endpoint.web.enabled=true
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.metric.tags.application=${spring.application.name}

## OpenTelemetry Config
#otel.tracing.enabled=true
#management.metrics.export.otlp.enabled=${OTLP_ENABLED:false}
#management.metrics.export.otlp.endpoint=${OTLP_ENDPOINT:http://localhost:4318/v1/metrics}
#management.metrics.export.otlp.resource-attributes=service.name=t4m-user-manager

# Virtual Threads
spring.threads.virtual.enabled=true

# Start up
spring.jmx.enabled=false

