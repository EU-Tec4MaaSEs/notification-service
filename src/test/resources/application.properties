spring.application.name=t4m-notification-service

# Spring Boot Config
build.version=@project.version@
server.port=${APP_PORT:8093}
application.url=${APP_URL:http://localhost:8093}
spring.devtools.add-properties=false
spring.security.cors.domains=http://localhost:3000
spring.security.oauth2.resourceserver.jwt.issuer-uri = ${KEYCLOAK_REALM_URL:http://localhost:9080/realms/tec4maases}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
spring.security.cors.domains=${CORS_DOMAINS:http://localhost:3000}
user.manager.component.url=${USER_MANAGER_URL:http://localhost:8094}
keycloak.client=${KEYCLOAK_CLIENT:tec4maases}
keycloak.client.secret=${KEYCLOAK_CLIENT_SECRET:test}
keycloak.token-uri=http://localhost:9080/realms/tec4maases/protocol/openid-connect/token

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# SQL Initialization
spring.sql.init.mode=never

## Logging
logging.level.org.springframework.security=INFO
logging.pattern.console=%green([%d{dd-MM-yyyy HH:mm:ss}]) %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

## Kafka Config
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=t4m-notification-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.topics=service-decomposition-finished,supply-chain-negotiation,supply-chain-order-status,stakeholders-matched

## OpenTelemetry Config
#otel.tracing.enabled=true
#management.metrics.export.otlp.enabled=${OTLP_ENABLED:false}
#management.metrics.export.otlp.endpoint=${OTLP_ENDPOINT:http://localhost:4318/v1/metrics}
#management.metrics.export.otlp.resource-attributes=service.name=t4m-user-manager

# Virtual Threads
spring.threads.virtual.enabled=true

# Start up
spring.jmx.enabled=false

